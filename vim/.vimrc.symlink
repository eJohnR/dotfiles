" ---------------------------------------------------------
"  John Rowley
"  John.A.Rowley@Googlemail.com
"  vimrc
"  Modified: 2013 Aug 30
" ---------------------------------------------------------

" Disable compatibly with Vi
set nocompatible
set modelines=0

" ---------------------------------------------------------
" Vundle
" ---------------------------------------------------------

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" ---------------------------------------------------------
" Manage Bundles
" ---------------------------------------------------------

" Let Vundle manage Vundle
Bundle 'gmarik/vundle'

Bundle 'godlygeek/tabular'
Bundle 'kien/ctrlp.vim'
Bundle 'majutsushi/tagbar'
Bundle 'Raimondi/delimitMate'
Bundle 'scrooloose/nerdtree'
Bundle 'tpope/vim-commentary'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'
Bundle 'Valloric/YouCompleteMe'

" ---------------------------------------------------------
" Leader Key
" ---------------------------------------------------------

let mapleader = ","

" Count Words/Characters
map <leader>c g<C-G>
" Edit Vimrc Quickly
map <leader>vi ;e $MYVIMRC<CR>
" Delete Trailing Whitespace
map <leader>rw ;%s/\s\+$//<CR>;w<CR>
" Retab and Reformat the File with Spaces
map <leader>T ;set expandtab<CR>;retab!<CR>
" Toggle Tagbar
map <leader>t ;TagbarToggle<CR>
" Toggle NERDTree
map <leader>d ;NERDTreeToggle<CR>
map <leader>f ;NERDTreeFind<CR>
" Fuzzy File Search
map <leader>t ;CtrlP<CR>
" Fuzzy Search for Buffers
map <leader>b ;CtrlPBuffer<CR>
" Align by = with Tabular
map <leader>a= ;Tab /=<CR>

" Auto-Generate Ctags
nnoremap <leader><CR> :lcd %:p:h<CR> :silent! !ctags -R --fields=+l<CR>

" Add Blank Lines w/o Leaving Normal Mode
map <leader>o o<ESC>
map <leader>O O<ESC>

" Edit another file in the same dir as the current file
" uses expression to extract path from current file's path
" Thanks Ben Orenstein(@r00k)
map <leader>e ;e <C-R>=expand("%:p:h") . '/'<CR>
map <leader>s ;split <C-R>=expand("%:p:h") . '/'<CR>
map <leader>v ;vsplit <C-R>=expand("%:p:h") . '/'<CR>

" Reload my .vimrc
map <leader>S ;source $MYVIMRC<CR>

" ---------------------------------------------------------
" Editing
" ---------------------------------------------------------

" Set File Encoding/Format
set encoding=utf-8
set fileformats=unix,dos,mac
set formatoptions=tcrql

" Enable Syntax Highlighting
syntax on
filetype plugin indent on

" Colour Scheme & Font
set background=dark
let g:solarized_termtrans=1
let g:solarized_contrast="high"
let g:solarized_visibility="low"
set guifont=Source\ Code\ Pro:h12
colorscheme solarized

" Splitting Buffers
set splitbelow
set splitright

" Fix Backspace/Clipboard
set backspace=start,indent,eol
if $TMUX == ''
  set clipboard=unnamed
endif

" Invisibles
set list
set listchars=tab:>\ ,eol:Â¬

" Location Indicators
set nocursorcolumn
set cursorline

" Line Number/Wrapping
set textwidth=78
set colorcolumn=80
set numberwidth=5
set number
set ruler
set wrap

" Brackets
set showmatch
set matchtime=2

" Tabs
set shiftround
set shiftwidth=3
set softtabstop=3
set tabstop=3

set smartindent
set autoindent
set copyindent
set expandtab
set smarttab

set ai
set si

" Search
set ignorecase
set incsearch
set smartcase
set hlsearch

" ---------------------------------------------------------
" Key Mappings
" ---------------------------------------------------------

" Disable Arrow Keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>

" Swap ; with :
noremap ; :
noremap : ;

" Easy Movement
nmap k gk
nmap j gj

" ---------------------------------------------------------
" UI
" ---------------------------------------------------------

" Hide Toolbar While Running
if has("gui_running")
    set guioptions=egmt
endif

" Scroll Window
set scrolloff=10

" Blink
set visualbell

" No redraw while executing macros
set lazyredraw

" Fast redraw
set ttyfast

" Show incomplete commands
set showcmd

" ---------------------------------------------------------
" Status Line
" ---------------------------------------------------------

" 256 Colours
set t_Co=256

" Show Status Line
set laststatus=2

set statusline=
set statusline+=%1*\ %{mode()}\             " Vim Mode
set statusline+=%2*\ %.30F\                 " File Path
set statusline+=%3*\ %{&modified?'*':''}    " Modified Flag
set statusline+=%4*\ %=%{&ff}\ \|           " File Format
set statusline+=%4*\ %{&fenc}\ \|           " File Encoding
set statusline+=%4*\ %{&ft}\ \              " Filetype
set statusline+=%5*\ %P\                    " Percent
set statusline+=%6*\ %l\ \|\ %c\            " Line | Column Number

" Status Line & Column Colour Settings
hi User1 ctermfg=15  ctermbg=2   guifg=#FFFFFF guibg=#709E00
hi User2 ctermfg=15  ctermbg=240 guifg=#FFFFFF guibg=#6A6A6A
hi User3 ctermfg=15  ctermbg=236 guifg=#FFFFFF guibg=#414141
hi User4 ctermfg=246 ctermbg=236 guifg=#949494 guibg=#414141
hi User5 ctermfg=15  ctermbg=240 guifg=#FFFFFF guibg=#6A6A6A
hi User6 ctermfg=0   ctermbg=15  guifg=#000000 guibg=#FFFFFF
hi ColorColumn       ctermbg=1                 guibg=#EF001F

" ---------------------------------------------------------
" Ctrl-P
" ---------------------------------------------------------

let g:ctrlp_dotfiles=0
let g:ctrlp_switch_buffer=0
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\v[\/]\.(git|hg|svn)$',
    \ 'file': '\v\.(exe|so|dll)$',
    \ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
    \ }
let g:ctrlp_working_path_mode=0
let g:ctrlp_max_depth=15

" Custom Statusline
let g:ctrlp_status_func = {
\ 'main': 'CtrlP_Statusline_1',
\ 'prog': 'CtrlP_Statusline_2'
\ }
 
fu! CtrlP_Statusline_1(...)
   let mode        = '%1* CtrlP '
   let description = '%2* Go To: '
   let prv         = '%4* '.a:4.' '
   let item        = '%6* '.a:5.' '
   let nxt         = '%4* '.a:6.' '
   let dir         = '%=%4* '.getcwd().' '

   retu mode.description.prv.item.nxt.dir
endf

fu! CtrlP_Statusline_2(...)
   let mode = '%1* CtrlP '
   let len  = '%4* '.a:1.' '
   let dir  = '%=%4* '.getcwd().' '

   retu mode.len.dir
endf

" ---------------------------------------------------------
" Language Specific
" ---------------------------------------------------------

" .py
au BufNewFile,BufRead *.py setlocal ai si et st ts=4 sw=4 sts=4

" tmux
au BufNewFile,BufRead *tmux.conf setlocal syntax=tmux

" ---------------------------------------------------------
" File Management
" ---------------------------------------------------------

" Save on Losing Focus
au FocusLost * :wa

" Code Folding
set foldenable
nnoremap <Space> za

" Undo File Changes
if version >= 703
  set undodir=~/.vim/undodir
  set undofile
  set undoreload=10000
endif
set undolevels=1000

" Keep 50 Commands in History
set history=50

" Filename Auto Completion
set wildignore+=log/**,tmp/**
set wildmode=list:longest,full
set wildmenu

" Buffer Management
set autoread
set autowrite
set hidden

" Disable Backup
set noswapfile
set nobackup
set nowb
